<?php

/*
 * @file
 * Poly Attribute module.
 *
 * Provides the ability to use field tokens for ubercart attribute options.
*
*/

/**
  * Implement hook_help()
 */ 

 function poly_attributes_help($path, $arg) {
 switch ($path) {
 case 'admin/help#poly_attribute':
   $output = '';
   $output .= '<h3>' . t('About Poly Attribute') . '</h3>';
   $output .= '<p>' . t("The Poly Attribute modules enable you to use tokens for replacement of attribute options hence making it attibut option dynamic") . '<p>';
 return $output;
   }
 }

/**
  * Implement hook_form_alter()
  * provides token support for ubercart attribute options
  */ 
 
 function poly_attribute_form_uc_attribute_uc_form_alter(&$form, &$form_state, $form_id) {
 
  if (module_exists('token')) {
   $form['token_help'] = array(
     '#theme' => 'token_tree',
    '#token_types' => array('node'),
  );
 }
 
 /** Original code from sites/all/modules/ubercart/uc_attribute/uc_attribute.module
 * Implements hook_uc_form_alter().
 *
 * Attaches option selectors to the form with the "Add to Cart" button.
 *
 * This function also handles selecting attributes for products added to orders
 * manually.
 */
function uc_attribute_uc_form_alter(&$form, &$form_state, $form_id) {
  if (strpos($form_id, 'add_to_cart_form') || $form_id == 'uc_order_add_product_form') {
    $use_ajax = strpos($form_id, 'add_to_cart_form') && variable_get('uc_product_update_node_view', FALSE);
    $node =& $form['node']['#value'];
    $id = $form_id . '-' . $node->nid . '-attributes';
    // If the node has a product list, add attributes to them.
    if (isset($form['products']) || isset($form['sub_products'])) {
      if (isset($form['products'])) {
        $element = &$form['products'];
      }
      else {
        $element = &$form['sub_products'];
      }
      foreach (element_children($element) as $key) {
        $element[$key]['attributes'] = _uc_attribute_alter_form($id . '-' . $key, $node->products[$key], $use_ajax);

        if (is_array($element[$key]['attributes'])) {
          $element[$key]['attributes']['#tree'] = TRUE;
          $element[$key]['#type'] = 'fieldset';
        }
      }
    }
    // If not, add attributes to the node.
    else {
      $form['attributes'] = _uc_attribute_alter_form($id, $node, $use_ajax);

      if (is_array($form['attributes'])) {
        $form['attributes']['#tree'] = TRUE;
        $form['attributes']['#weight'] = -1;
      }
    }
  }
}
*/
  
}

 function poly_attribute_custom_submit() {
  
}
